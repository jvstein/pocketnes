; generated by Norcroft  ARM C vsn 4.90 (ARM Ltd SDT2.50) [Build number 80]

|x$codeseg| DATA

;;;1      //based on Jeff Frohwein's slave boot demo:
;;;2      //http://www.devrs.com/gba/files/mbclient.txt
;;;3      
;;;4      #include <stdio.h>
;;;5      #include "gba.h"
;;;6      
;;;7      u8 *findrom(int);
;;;8      
;;;9      extern u8 Image$$RO$$Limit;
;;;10     extern u8 Image$$RW$$Limit;
;;;11     extern u32 romnum;	//from cart.s
;;;12     extern u8 *textstart;	//from main.c
;;;13     
;;;14     u32 max_multiboot_size;		//largest possible multiboot transfer (init'd by boot.s)
;;;15     
;;;16     typedef struct {
;;;17       u32 reserve1[5];      //
;;;18       u8 hs_data;           // 20 ($14) Needed by BIOS
;;;19       u8 reserve2;          // 21 ($15)
;;;20       u16 reserve3;         // 22 ($16)
;;;21       u8 pc;                // 24 ($18) Needed by BIOS
;;;22       u8 cd[3];             // 25 ($19)
;;;23       u8 palette;           // 28 ($1c) Needed by BIOS - Palette flash while load
;;;24       u8 reserve4;          // 29 ($1d) rb
;;;25       u8 cb;                // 30 ($1e) Needed by BIOS
;;;26       u8 reserve5;          // 31 ($1f)
;;;27       u8 *startp;           // 32 ($20) Needed by BIOS
;;;28       u8 *endp;             // 36 ($24) Needed by BIOS
;;;29       u8 *reserve6;         // 40 ($28)
;;;30       u8 *reserve7[3];      // 44 ($2c)
;;;31       u32 reserve8[4];      // 56 ($38)
;;;32       u8 reserve9;          // 72 ($48)
;;;33       u8 reserve10;         // 73 ($49)
;;;34       u8 reserve11;         // 74 ($4a)
;;;35       u8 reserve12;         // 75 ($4b)
;;;36     } MBStruct;
;;;37     
;;;38     const
;;;39     #include "client.h"
;;;40     
;;;41     void delay() {
;;;42     	int i=32768;
                  delay
000000  e3a00902          MOV      a1,#0x8000
;;;43     	while(--i);	//(we're running from EXRAM)
                  |L000004.J5.delay|
000004  e2500001          SUBS     a1,a1,#1
000008  1afffffd          BNE      |L000004.J5.delay|
00000c  e1a0f00e          MOV      pc,lr

;;;44     }
;;;45     
;;;46     u16 xfer(u32 send) {
;;;47     	REG_SIOMLT_SEND = send;
                  xfer
000010  e1a01000          MOV      a2,a1
000014  e3a00301          MOV      a1,#0x4000000
000018  e2800c01          ADD      a1,a1,#0x100
00001c  e1c012ba          STRH     a2,[a1,#0x2a]
;;;48     	REG_SIOCNT = 0x2083;
000020  e3a01083          MOV      a2,#0x83
000024  e2811a02          ADD      a2,a2,#0x2000
000028  e1c012b8          STRH     a2,[a1,#0x28]
;;;49     	while(REG_SIOCNT & 0x80) {}
                  |L00002c.J5.xfer|
00002c  e1d012b8          LDRH     a2,[a1,#0x28]
000030  e3110080          TST      a2,#0x80
000034  1afffffc          BNE      |L00002c.J5.xfer|
;;;50     	return (REG_SIOMULTI1);
000038  e1d002b2          LDRH     a1,[a1,#0x22]
00003c  e1a0f00e          MOV      pc,lr

;;;51     }
;;;52     
;;;53     void swi25(void *p) {
                  swi25
000040  e92d4f00          STMDB    sp!,{v5-v8,lr}
;;;54     	__asm{mov r1,#1}
000044  e3a01001          MOV      a2,#1
;;;55     	__asm{swi 0x250000, {r0-r1}, {}, {r0-r2,r8-r12} }
000048  ef250000          SWI      0x250000
00004c  e8bd8f00          LDMIA    sp!,{v5-v8,pc}

;;;56     }
;;;57     
;;;58     //returns error code:  1=no link, 2=bad send, 3=too big
;;;59     #define TIMEOUT 40
;;;60     int SendMBImageToClient(void) {
                  SendMBImageToClient
                  |L000050.J2.SendMBImageToClient|
000050  e92d4ff0          STMDB    sp!,{v1-v8,lr}
000054  e24dd04c          SUB      sp,sp,#0x4c
;;;61     	MBStruct mp;
;;;62     	u8 palette;
;;;63     	u32 i,j;
;;;64     	u16 key;
;;;65     	u16 *p;
;;;66     	u16 ie;
;;;67     	u32 emusize,romsize;
;;;68     
;;;69     	emusize=((u32)(&Image$$RO$$Limit)&0x3ffff)+((u32)(&Image$$RW$$Limit)&0x7fff);
000058  e59f0214          LDR      a1,[pc, #L000274-.-8]
00005c  e59f1214          LDR      a2,[pc, #L000278-.-8]
000060  e1a00700          MOV      a1,a1,LSL #14
000064  e1a01881          MOV      a2,a2,LSL #17
000068  e1a018a1          MOV      a2,a2,LSR #17
00006c  e1a00720          MOV      a1,a1,LSR #14
;;;70     	romsize=48+*(u32*)(findrom(romnum)+32);
000070  e59f9204          LDR      v6,[pc, #L00027c-.-8]
000074  e0805001          ADD      v2,a1,a2   ;;;69
000078  e5990000          LDR      a1,[v6,#0]
00007c  ebffffdf          BL       findrom
000080  e5900020          LDR      a1,[a1,#0x20]
000084  e2804030          ADD      v1,a1,#0x30
;;;71     	if(emusize+romsize>max_multiboot_size) return 3;
000088  e59f01f0          LDR      a1,[pc, #L000280-.-8]
00008c  e085a004          ADD      v7,v2,v1
000090  e5900000          LDR      a1,[a1,#0]
000094  e15a0000          CMP      v7,a1
000098  83a00003          MOVHI    a1,#3
00009c  8a000072          BHI      |L00026c.J48.SendMBImageToClient|
;;;72     
;;;73     	REG_RCNT=0x8003;		//general purpose comms - sc/sd inputs
0000a0  e3a00003          MOV      a1,#3
0000a4  e3a03301          MOV      a4,#0x4000000
0000a8  e2833c01          ADD      a4,a4,#0x100
0000ac  e2800902          ADD      a1,a1,#0x8000
0000b0  e1c303b4          STRH     a1,[a4,#0x34]
;;;74     	i=TIMEOUT;
0000b4  e3a01028          MOV      a2,#0x28
0000b8  e3a02001          MOV      a3,#1
0000bc  ea000000          B        |L0000c4.J7.SendMBImageToClient|
;;;75     	while(--i && (REG_RCNT&3)==3) delay();
                  |L0000c0.J6.SendMBImageToClient|
0000c0  ebffffce          BL       delay
                  |L0000c4.J7.SendMBImageToClient|
0000c4  e2511001          SUBS     a2,a2,#1
0000c8  0a000005          BEQ      |L0000e4.J12.SendMBImageToClient|
0000cc  e1d303b4          LDRH     a1,[a4,#0x34]
0000d0  e2000003          AND      a1,a1,#3
0000d4  e3500003          CMP      a1,#3
0000d8  0afffff8          BEQ      |L0000c0.J6.SendMBImageToClient|
;;;76     	if(!i) return 1;
;;;77     
;;;78     	i=TIMEOUT;
0000dc  e3a01028          MOV      a2,#0x28
0000e0  ea000002          B        |L0000f0.J14.SendMBImageToClient|
                  |L0000e4.J12.SendMBImageToClient|
0000e4  e1a00002          MOV      a1,a3   ;;;76
0000e8  ea00005f          B        |L00026c.J48.SendMBImageToClient|   ;;;76
;;;79     	while(--i && (REG_RCNT&3)!=3) delay();
                  |L0000ec.J13.SendMBImageToClient|
0000ec  ebffffc3          BL       delay
                  |L0000f0.J14.SendMBImageToClient|
0000f0  e2511001          SUBS     a2,a2,#1
0000f4  0afffffa          BEQ      |L0000e4.J12.SendMBImageToClient|
0000f8  e1d303b4          LDRH     a1,[a4,#0x34]
0000fc  e2000003          AND      a1,a1,#3
000100  e3500003          CMP      a1,#3
000104  1afffff8          BNE      |L0000ec.J13.SendMBImageToClient|
;;;80     	if(!i) return 1;
;;;81     
;;;82     	REG_RCNT=0;			//non-general purpose comms
;;;83     
;;;84     	i=5;
000108  e3a08002          MOV      v5,#2
00010c  e2882c62          ADD      a3,v5,#0x6200
000110  e3a06000          MOV      v3,#0   ;;;82
000114  e1c363b4          STRH     v3,[a4,#0x34]   ;;;82
000118  e282ba01          ADD      v8,a3,#0x1000
00011c  e3a07005          MOV      v4,#5
;;;85     	do {
;;;86     		delay();
                  |L000120.J20.SendMBImageToClient|
000120  ebffffb6          BL       delay
;;;87     		j=xfer(0x6202);
000124  e1a00002          MOV      a1,a3
000128  ebffffb8          BL       xfer
;;;88     	} while(--i && j!=0x7202);
00012c  e2577001          SUBS     v4,v4,#1
;;;89     	if(!i) return 2;
000130  01a00008          MOVEQ    a1,v5
000134  0a00004c          BEQ      |L00026c.J48.SendMBImageToClient|
000138  e150000b          CMP      a1,v8   ;;;88
00013c  1afffff7          BNE      |L000120.J20.SendMBImageToClient|   ;;;88
;;;90     
;;;91     	xfer (0x6100);
000140  e3a00c61          MOV      a1,#0x6100
000144  ebffffb1          BL       xfer
;;;92     	p=(u16*)0x2000000;
000148  e3a0c402          MOV      ip,#0x2000000
;;;93     	for(i=0;i<96; i++) {		//send header
00014c  e3a07000          MOV      v4,#0
;;;94     		xfer(*p);
                  |L000150.J26.SendMBImageToClient|
000150  e1dc00b0          LDRH     a1,[ip,#0]
000154  ebffffad          BL       xfer
000158  e2877001          ADD      v4,v4,#1   ;;;93
00015c  e3570060          CMP      v4,#0x60   ;;;93
;;;95     		p++;
000160  e28cc002          ADD      ip,ip,#2
000164  3afffff9          BCC      |L000150.J26.SendMBImageToClient|   ;;;93
;;;96     	}
;;;97     
;;;98     	xfer(0x6202);
000168  e1a00002          MOV      a1,a3
00016c  ebffffa7          BL       xfer
;;;99     	mp.cb = 2;
000170  e5cd801e          STRB     v5,[sp,#0x1e]
;;;100    	mp.pc = 0xd1;
000174  e3a000d1          MOV      a1,#0xd1
000178  e5cd0018          STRB     a1,[sp,#0x18]
;;;101    	mp.startp=(u8*)Client;
00017c  e59f0100          LDR      a1,[pc, #L000284-.-8]
;;;102    	i=sizeof(Client);
;;;103    	i=(i+15)&~15;		//16 byte units
;;;104    	mp.endp=(u8*)Client+i;
000180  e58d0020          STR      a1,[sp,#0x20]
000184  e2800e5b          ADD      a1,a1,#0x5b0
;;;105    
;;;106    	palette = 0xef;
000188  e58d0024          STR      a1,[sp,#0x24]
00018c  e3a000ef          MOV      a1,#0xef
;;;107    //8x=purple->blue
;;;108    //9x=blue->emerald
;;;109    //ax=emerald->green
;;;110    //bx=green->yellow
;;;111    //cx=yellow->red
;;;112    //dx=red->purple
;;;113    //ex=purple->white
;;;114    	mp.palette = palette;
000190  e5cd001c          STRB     a1,[sp,#0x1c]
;;;115    
;;;116    	xfer(0x6300+palette);
000194  e2802c63          ADD      a3,a1,#0x6300
000198  e1a00002          MOV      a1,a3
00019c  ebffff9b          BL       xfer
;;;117    	i=xfer(0x6300+palette);
0001a0  e1a00002          MOV      a1,a3
0001a4  ebffff99          BL       xfer
;;;118    
;;;119    	mp.cd[0] = i;
0001a8  e5cd0019          STRB     a1,[sp,#0x19]
;;;120    	mp.cd[1] = 0xff;
0001ac  e3a010ff          MOV      a2,#0xff
;;;121    	mp.cd[2] = 0xff;
;;;122    
;;;123    	key = (0x11 + (i & 0xff) + 0xff + 0xff) & 0xff;
0001b0  e280000f          ADD      a1,a1,#0xf
0001b4  e2800c02          ADD      a1,a1,#0x200
0001b8  e5cd101a          STRB     a2,[sp,#0x1a]   ;;;120
0001bc  e5cd101b          STRB     a2,[sp,#0x1b]   ;;;121
0001c0  e0000001          AND      a1,a1,a2
;;;124    	mp.hs_data = key;
0001c4  e5cd0014          STRB     a1,[sp,#0x14]
;;;125    
;;;126    	xfer(0x6400 | (key & 0xff));
0001c8  e3800b19          ORR      a1,a1,#0x6400
0001cc  ebffff8f          BL       xfer
;;;127    
;;;128    	ie=REG_IE;
0001d0  e3a07301          MOV      v4,#0x4000000
0001d4  e2877c02          ADD      v4,v4,#0x200
0001d8  e1d780b0          LDRH     v5,[v4,#0]
;;;129    	REG_IE=0;		//don't interrupt
0001dc  e1c760b0          STRH     v3,[v4,#0]
;;;130    	REG_DM0CNT_H=0;		//DMA stop
0001e0  e3a00301          MOV      a1,#0x4000000
0001e4  e1c06bba          STRH     v3,[a1,#0xba]
;;;131    	REG_DM1CNT_H=0;
0001e8  e1c06cb6          STRH     v3,[a1,#0xc6]
;;;132    	REG_DM3CNT_H=0;
0001ec  e1c06dbe          STRH     v3,[a1,#0xde]
;;;133    
;;;134    	swi25(&mp);	//Execute BIOS routine to transfer client binary to slave unit
0001f0  e1a0000d          MOV      a1,sp
0001f4  ebffff91          BL       swi25
;;;135    
;;;136    	//now send everything else
;;;137    
;;;138    	REG_RCNT=0;			//non-general purpose comms
0001f8  e1c363b4          STRH     v3,[a4,#0x34]
;;;139    	while(xfer(0x99)!=0x99);	//wait til client is ready
                  |L0001fc.J29.SendMBImageToClient|
0001fc  e3a00099          MOV      a1,#0x99
000200  ebffff82          BL       xfer
000204  e3500099          CMP      a1,#0x99
000208  1afffffb          BNE      |L0001fc.J29.SendMBImageToClient|
;;;140    
;;;141    	xfer(emusize+romsize);		//transmission size..
00020c  e1a0000a          MOV      a1,v7
000210  ebffff7e          BL       xfer
;;;142    	xfer((emusize+romsize)>>16);
000214  e1a0082a          MOV      a1,v7,LSR #16
000218  ebffff7c          BL       xfer
;;;143    
;;;144    	p=(u16*)((u32)textstart&0xa000000);		//(from rom or ram?)
00021c  e59f0064          LDR      a1,[pc, #L000288-.-8]
000220  e5900000          LDR      a1,[a1,#0]
000224  e200240a          AND      a3,a1,#0xa000000
000228  ea000002          B        |L000238.J32.SendMBImageToClient|
;;;145    	for(;emusize;emusize-=2)	//send whole emu
;;;146    		xfer(*(p++));
                  |L00022c.J31.SendMBImageToClient|
00022c  e0d200b2          LDRH     a1,[a3],#2
000230  ebffff76          BL       xfer
000234  e2455002          SUB      v2,v2,#2   ;;;145
                  |L000238.J32.SendMBImageToClient|
000238  e3550000          CMP      v2,#0   ;;;145
00023c  1afffffa          BNE      |L00022c.J31.SendMBImageToClient|   ;;;145
;;;147    	p=(u16*)findrom(romnum);	//send ROM
000240  e5990000          LDR      a1,[v6,#0]
000244  ebffff6d          BL       findrom
000248  e1a02000          MOV      a3,a1
00024c  ea000002          B        |L00025c.J35.SendMBImageToClient|
;;;148    	for(;romsize;romsize-=2)
;;;149    		xfer(*(p++));
                  |L000250.J34.SendMBImageToClient|
000250  e0d200b2          LDRH     a1,[a3],#2
000254  ebffff6d          BL       xfer
000258  e2444002          SUB      v1,v1,#2   ;;;148
                  |L00025c.J35.SendMBImageToClient|
00025c  e3540000          CMP      v1,#0   ;;;148
000260  1afffffa          BNE      |L000250.J34.SendMBImageToClient|   ;;;148
;;;150    	REG_IE=ie;
000264  e1c780b0          STRH     v5,[v4,#0]
;;;151    	return 0;
000268  e1a00006          MOV      a1,v3
                  |L00026c.J48.SendMBImageToClient|
00026c  e28dd04c          ADD      sp,sp,#0x4c
000270  e8bd8ff0          LDMIA    sp!,{v1-v8,pc}
                  L000274
000274  00000000          DCD      |Image$$RO$$Limit|
                  L000278
000278  00000000          DCD      |Image$$RW$$Limit|
                  L00027c
00027c  00000000          DCD      romnum
                  L000280
000280  00000000          DCD      |x$dataseg|
                  L000284
000284  00000000          DCD      |x$constdata|
                  L000288
000288  00000000          DCD      textstart
;;;152    }
                          AREA |C$$constdata|, DATA, READONLY

|x$constdata|
                  Client
                          DCB      0x2c,0x00,0x00,0xea
                          DCB      0x00,0x00,0x00,0x00
                          DCB      0x00,0x00,0x00,0x00
                          DCB      0x00,0x00,0x00,0x00
                          DCB      0x00,0x00,0x00,0x00
                          DCB      0x00,0x00,0x00,0x00
                          DCB      0x00,0x00,0x00,0x00
                          DCB      0x00,0x00,0x00,0x00
                          DCB      0x88,0x20,0x9f,0xe5
                          DCB      0x00,0x00,0xe0,0xe3
                          DCB      0xb0,0x00,0xc2,0xe1
                          DCB      0x80,0x20,0x9f,0xe5
                          DCB      0xb0,0x00,0xd2,0xe1
                          DCB      0x54,0x10,0x9f,0xe5
                          DCB      0x5c,0x20,0x8f,0xe2
                          DCB      0x01,0x30,0x81,0xe2
                          DCB      0x01,0xf1,0x92,0xe7
                          DCB      0x99,0x00,0x50,0xe3
                          DCB      0x40,0x30,0x8f,0x05
                          DCB      0x1e,0xff,0x2f,0xe1
                          DCB      0x99,0x00,0x50,0xe3
                          DCB      0xbc,0x03,0xcf,0x11
                          DCB      0x30,0x30,0x8f,0x15
                          DCB      0x1e,0xff,0x2f,0xe1
                          DCB      0xb2,0x03,0xcf,0xe1
                          DCB      0x24,0x30,0x8f,0xe5
                          DCB      0x1e,0xff,0x2f,0xe1
                          DCB      0x02,0x14,0xa0,0xe3
                          DCB      0x1c,0x20,0x9f,0xe5
                          DCB      0xb2,0x00,0x81,0xe1
                          DCB      0x02,0x20,0x82,0xe2
                          DCB      0x14,0x00,0x9f,0xe5
                          DCB      0x00,0x00,0x52,0xe1
                          DCB      0x08,0x20,0x8f,0x15
                          DCB      0x00,0x30,0x8f,0x05
                          DCB      0x1e,0xff,0x2f,0xe1
                          DCB      0x00,0x00,0x00,0x00
                          DCB      0x00,0x00,0x00,0x00
                          DCB      0xde,0xbc,0x0a,0x00
                          DCB      0x44,0x00,0x00,0x03
                          DCB      0x50,0x00,0x00,0x03
                          DCB      0x60,0x00,0x00,0x03
                          DCB      0x6c,0x00,0x00,0x03
                          DCB      0x8c,0x00,0x00,0x03
                          DCB      0x02,0x02,0x00,0x04
                          DCB      0x20,0x01,0x00,0x04
                          DCB      0x02,0x14,0xa0,0xe3
                          DCB      0x03,0x04,0xa0,0xe3
                          DCB      0x1c,0x20,0x9f,0xe5
                          DCB      0x1c,0x30,0x9f,0xe5
                          DCB      0x7f,0xdc,0x80,0xe2
                          DCB      0xc0,0x10,0x81,0xe2
                          DCB      0x04,0xc0,0x91,0xe4
                          DCB      0x04,0xc0,0x80,0xe4
                          DCB      0x03,0x00,0x50,0xe1
                          DCB      0xfb,0xff,0xff,0x3a
                          DCB      0x00,0xf0,0x82,0xe2
                          DCB      0xec,0x00,0x00,0x03
                          DCB      0x00,0x08,0x00,0x03
                          DCB      0xf0,0x4f,0x2d,0xe9
                          DCB      0x00,0x40,0xa0,0xe3
                          DCB      0x00,0x50,0xa0,0xe3
                          DCB      0x02,0xa4,0xa0,0xe3
                          DCB      0x42,0x00,0x00,0xeb
                          DCB      0x01,0x18,0xa0,0xe3
                          DCB      0x01,0x03,0xa0,0xe3
                          DCB      0x02,0x0c,0x80,0xe2
                          DCB      0x01,0x10,0x41,0xe2
                          DCB      0xb2,0x10,0xc0,0xe1
                          DCB      0x80,0x10,0xa0,0xe3
                          DCB      0xb0,0x10,0xc0,0xe1
                          DCB      0x01,0x10,0xa0,0xe3
                          DCB      0xb8,0x10,0xc0,0xe1
                          DCB      0x07,0x0a,0xa0,0xe3
                          DCB      0xcc,0x10,0x9f,0xe5
                          DCB      0x03,0x04,0x80,0xe2
                          DCB      0xfc,0x1f,0x80,0xe5
                          DCB      0x01,0xb3,0xa0,0xe3
                          DCB      0x01,0xbc,0x8b,0xe2
                          DCB      0x00,0x00,0xa0,0xe3
                          DCB      0xb4,0x03,0xcb,0xe1
                          DCB      0x99,0x00,0xa0,0xe3
                          DCB      0xba,0x02,0xcb,0xe1
                          DCB      0x03,0x00,0xa0,0xe3
                          DCB      0x06,0x0a,0x80,0xe2
                          DCB      0xb8,0x02,0xcb,0xe1
                          DCB      0xa0,0x80,0x9f,0xe5
                          DCB      0xa0,0x90,0x9f,0xe5
                          DCB      0x01,0x63,0xa0,0xe3
                          DCB      0x9c,0x70,0x9f,0xe5
                          DCB      0x1b,0x00,0x00,0xea
                          DCB      0x01,0x40,0x44,0xe2
                          DCB      0xb6,0x41,0xc6,0xe1
                          DCB      0x00,0x00,0x99,0xe5
                          DCB      0x00,0x11,0x80,0xe0
                          DCB      0x81,0x12,0xa0,0xe1
                          DCB      0x00,0x00,0x98,0xe5
                          DCB      0x8a,0x00,0x00,0xeb
                          DCB      0x60,0x00,0x80,0xe2
                          DCB      0xb2,0x01,0xc6,0xe1
                          DCB      0xb6,0x00,0xd6,0xe1
                          DCB      0xa0,0x00,0x50,0xe3
                          DCB      0xfc,0xff,0xff,0xaa
                          DCB      0xb6,0x00,0xd6,0xe1
                          DCB      0xa0,0x00,0x50,0xe3
                          DCB      0xfc,0xff,0xff,0xba
                          DCB      0x03,0x00,0x14,0xe3
                          DCB      0x05,0x10,0xa0,0x01
                          DCB      0x01,0x50,0x85,0x02
                          DCB      0x02,0x00,0xa0,0x03
                          DCB      0x60,0x00,0x00,0x0b
                          DCB      0x07,0x00,0x14,0xe3
                          DCB      0xc5,0x10,0xa0,0x01
                          DCB      0x01,0x00,0xa0,0x03
                          DCB      0x5c,0x00,0x00,0x0b
                          DCB      0x0f,0x00,0x14,0xe3
                          DCB      0x45,0x11,0xa0,0x01
                          DCB      0x00,0x00,0xa0,0x03
                          DCB      0x58,0x00,0x00,0x0b
                          DCB      0x00,0x00,0x97,0xe5
                          DCB      0x04,0x00,0x50,0xe3
                          DCB      0xe0,0xff,0xff,0x3a
                          DCB      0x02,0x0a,0xa0,0xe3
                          DCB      0xb8,0x02,0xcb,0xe1
                          DCB      0x00,0xc0,0x8a,0xe2
                          DCB      0xf0,0x4f,0xbd,0xe8
                          DCB      0x0c,0xf0,0xa0,0xe1
                          DCB      0x20,0x00,0x00,0x03
                          DCB      0x98,0x00,0x00,0x03
                          DCB      0x94,0x00,0x00,0x03
                          DCB      0x90,0x00,0x00,0x03
                          DCB      0x30,0x40,0x2d,0xe9
                          DCB      0x80,0x10,0xa0,0xe3
                          DCB      0x01,0x53,0xa0,0xe3
                          DCB      0x00,0x10,0x85,0xe5
                          DCB      0x22,0x1b,0xa0,0xe3
                          DCB      0xb8,0x10,0xc5,0xe1
                          DCB      0x01,0x10,0xa0,0xe3
                          DCB      0x01,0x1a,0x81,0xe2
                          DCB      0xba,0x10,0xc5,0xe1
                          DCB      0x01,0x19,0xa0,0xe3
                          DCB      0x06,0x14,0x81,0xe2
                          DCB      0x01,0x49,0x81,0xe2
                          DCB      0xf4,0x00,0x9f,0xe5
                          DCB      0xf4,0x20,0x9f,0xe5
                          DCB      0x04,0x30,0xa0,0xe1
                          DCB      0x00,0xc0,0xa0,0xe3
                          DCB      0x0c,0xe0,0xa0,0xe3
                          DCB      0xb2,0xe0,0xc1,0xe0
                          DCB      0x01,0xc0,0x8c,0xe2
                          DCB      0x01,0x0b,0x5c,0xe3
                          DCB      0xb2,0xe0,0xc3,0xe0
                          DCB      0xfa,0xff,0xff,0xba
                          DCB      0x00,0x30,0xa0,0xe3
                          DCB      0x00,0xc0,0xa0,0xe1
                          DCB      0x02,0x00,0x80,0xe0
                          DCB      0x0c,0x20,0xa0,0xe1
                          DCB      0xa0,0xce,0xa0,0xe1
                          DCB      0x01,0x30,0x83,0xe2
                          DCB      0x01,0x0b,0x53,0xe3
                          DCB      0xb2,0xc0,0xc1,0xe0
                          DCB      0xf7,0xff,0xff,0xba
                          DCB      0x28,0xc0,0xa0,0xe3
                          DCB      0x09,0x3c,0x41,0xe2
                          DCB      0x01,0xcb,0x8c,0xe2
                          DCB      0xbe,0xcf,0xc3,0xe1
                          DCB      0x29,0xc0,0xa0,0xe3
                          DCB      0xb4,0xcc,0xc3,0xe1
                          DCB      0x20,0x30,0xa0,0xe3
                          DCB      0x02,0x1b,0x41,0xe2
                          DCB      0xb0,0x30,0xc1,0xe1
                          DCB      0x21,0x30,0xa0,0xe3
                          DCB      0xb2,0x30,0xc1,0xe1
                          DCB      0x22,0x30,0xa0,0xe3
                          DCB      0xb0,0x34,0xc1,0xe1
                          DCB      0x23,0x30,0xa0,0xe3
                          DCB      0xb2,0x34,0xc1,0xe1
                          DCB      0x14,0x30,0xa0,0xe3
                          DCB      0xb4,0x30,0xc1,0xe1
                          DCB      0x15,0x30,0xa0,0xe3
                          DCB      0xbe,0x33,0xc1,0xe1
                          DCB      0x00,0x10,0xa0,0xe3
                          DCB      0x00,0x30,0xa0,0xe1
                          DCB      0x02,0x00,0x80,0xe0
                          DCB      0x03,0x20,0xa0,0xe1
                          DCB      0xa0,0x3e,0xa0,0xe1
                          DCB      0xb0,0x30,0xc4,0xe1
                          DCB      0x07,0x30,0x00,0xe2
                          DCB      0xb2,0x30,0xc4,0xe1
                          DCB      0x01,0x10,0x81,0xe2
                          DCB      0x20,0x00,0x51,0xe3
                          DCB      0x40,0x40,0x84,0xe2
                          DCB      0xf4,0xff,0xff,0xba
                          DCB      0x02,0x19,0xa0,0xe3
                          DCB      0x01,0x10,0x41,0xe2
                          DCB      0x05,0x04,0xa0,0xe3
                          DCB      0xb0,0x10,0xc0,0xe1
                          DCB      0xb2,0x10,0xc0,0xe1
                          DCB      0x00,0x10,0xa0,0xe3
                          DCB      0xb4,0x10,0xc0,0xe1
                          DCB      0x6f,0x00,0xa0,0xe3
                          DCB      0xb0,0x01,0xc5,0xe1
                          DCB      0xb4,0x01,0xc5,0xe1
                          DCB      0x03,0x0c,0xa0,0xe3
                          DCB      0x00,0x00,0x85,0xe5
                          DCB      0x30,0x80,0xbd,0xe8
                          DCB      0x21,0x43,0x65,0x87
                          DCB      0x78,0x56,0x34,0x12
                          DCB      0x04,0xe0,0x2d,0xe5
                          DCB      0x06,0x24,0xa0,0xe3
                          DCB      0x01,0x32,0xa0,0xe1
                          DCB      0x58,0xc0,0x9f,0xe5
                          DCB      0x00,0x10,0xa0,0xe3
                          DCB      0x80,0x24,0x82,0xe0
                          DCB      0x03,0xe0,0x81,0xe0
                          DCB      0x7f,0xe0,0x0e,0xe2
                          DCB      0x8e,0xe0,0xa0,0xe1
                          DCB      0xbe,0xe0,0x9c,0xe1
                          DCB      0x01,0x10,0x81,0xe2
                          DCB      0x80,0x00,0x51,0xe3
                          DCB      0xb2,0xe0,0xc2,0xe0
                          DCB      0xf7,0xff,0xff,0xba
                          DCB      0x02,0x00,0x50,0xe3
                          DCB      0x04,0xf0,0x9d,0x14
                          DCB      0x00,0x00,0xa0,0xe3
                          DCB      0x24,0x10,0x9f,0xe5
                          DCB      0x03,0xc0,0x80,0xe0
                          DCB      0x3f,0xc0,0x0c,0xe2
                          DCB      0x8c,0xc0,0xa0,0xe1
                          DCB      0xbc,0xc0,0x91,0xe1
                          DCB      0x01,0x00,0x80,0xe2
                          DCB      0x40,0x00,0x50,0xe3
                          DCB      0xb2,0xc0,0xc2,0xe0
                          DCB      0xf7,0xff,0xff,0xba
                          DCB      0x04,0xf0,0x9d,0xe4
                          DCB      0x2c,0x04,0x00,0x03
                          DCB      0x2c,0x05,0x00,0x03
                          DCB      0x00,0x30,0xa0,0xe3
                          DCB      0x00,0x20,0xb0,0xe1
                          DCB      0x0a,0x00,0x00,0x0a
                          DCB      0xa1,0x00,0x52,0xe1
                          DCB      0x82,0x20,0xa0,0x91
                          DCB      0xfc,0xff,0xff,0x3a
                          DCB      0x02,0x00,0x51,0xe1
                          DCB      0x03,0x30,0xa3,0xe0
                          DCB      0x02,0x10,0x41,0x20
                          DCB      0x00,0x00,0x32,0xe1
                          DCB      0xa2,0x20,0xa0,0x11
                          DCB      0xf9,0xff,0xff,0x1a
                          DCB      0x03,0x00,0xa0,0xe1
                          DCB      0x0e,0xf0,0xa0,0xe1
                          DCB      0x00,0xe0,0x2d,0xe9
                          DCB      0xff,0x1f,0x2d,0xe9
                          DCB      0x04,0xe0,0x4e,0xe2
                          DCB      0x3c,0xe0,0x8d,0xe5
                          DCB      0x10,0x00,0x8f,0xe2
                          DCB      0x0d,0x10,0xa0,0xe1
                          DCB      0x1c,0xc0,0x9f,0xe5
                          DCB      0x00,0x00,0x5c,0xe3
                          DCB      0x0c,0xf0,0xa0,0x11
                          DCB      0x10,0x00,0x00,0xe6
                          DCB      0x20,0x00,0x00,0x80
                          DCB      0x44,0x69,0x76,0x69
                          DCB      0x64,0x65,0x20,0x62
                          DCB      0x79,0x20,0x7a,0x65
                          DCB      0x72,0x6f,0x00,0x00
                          DCB      0x00,0x00,0x00,0x00
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x21,0x11,0x22,0x12
                          DCB      0x21,0x11,0x12,0x12
                          DCB      0x21,0x11,0x22,0x12
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x21,0x11,0x22,0x12
                          DCB      0x21,0x11,0x12,0x12
                          DCB      0x21,0x11,0x22,0x12
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x22,0x12,0x21,0x11
                          DCB      0x12,0x12,0x21,0x11
                          DCB      0x22,0x12,0x21,0x11
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x22,0x12,0x22,0x12
                          DCB      0x12,0x12,0x12,0x12
                          DCB      0x22,0x12,0x22,0x12
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x21,0x11,0x22,0x12
                          DCB      0x21,0x11,0x12,0x12
                          DCB      0x21,0x11,0x22,0x12
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x22,0x12,0x21,0x11
                          DCB      0x12,0x12,0x21,0x11
                          DCB      0x22,0x12,0x21,0x11
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x22,0x12,0x22,0x12
                          DCB      0x12,0x12,0x12,0x12
                          DCB      0x22,0x12,0x22,0x12
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x21,0x11,0x21,0x11
                          DCB      0x21,0x11,0x21,0x11
                          DCB      0x21,0x11,0x21,0x11
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x22,0x12,0x22,0x12
                          DCB      0x12,0x12,0x12,0x12
                          DCB      0x22,0x12,0x22,0x12
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x21,0x11,0x22,0x12
                          DCB      0x21,0x11,0x12,0x12
                          DCB      0x21,0x11,0x22,0x12
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x21,0x11,0x21,0x11
                          DCB      0x21,0x11,0x21,0x11
                          DCB      0x21,0x11,0x21,0x11
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x21,0x11,0x22,0x12
                          DCB      0x21,0x11,0x12,0x12
                          DCB      0x21,0x11,0x22,0x12
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x22,0x12,0x21,0x11
                          DCB      0x12,0x12,0x21,0x11
                          DCB      0x22,0x12,0x21,0x11
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x21,0x11,0x21,0x11
                          DCB      0x21,0x11,0x21,0x11
                          DCB      0x21,0x11,0x21,0x11
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x22,0x12,0x22,0x12
                          DCB      0x12,0x12,0x12,0x12
                          DCB      0x22,0x12,0x22,0x12
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x22,0x12,0x21,0x11
                          DCB      0x12,0x12,0x21,0x11
                          DCB      0x22,0x12,0x21,0x11
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x21,0x12,0x11,0x12
                          DCB      0x11,0x11,0x12,0x11
                          DCB      0x12,0x11,0x11,0x12
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x11,0x21,0x11,0x11
                          DCB      0x11,0x21,0x11,0x11
                          DCB      0x21,0x11,0x21,0x21
                          DCB      0x11,0x11,0x11,0x21
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x11,0x11,0x12,0x11
                          DCB      0x12,0x11,0x11,0x11
                          DCB      0x11,0x12,0x12,0x11
                          DCB      0x11,0x11,0x11,0x21
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x11,0x11,0x11,0x11
                          DCB      0x11,0x11,0x21,0x11
                          DCB      0x21,0x11,0x11,0x11
                          DCB      0x11,0x21,0x21,0x11
                          DCB      0x12,0x11,0x11,0x11

                          AREA |C$$data|, DATA

                  |x$dataseg|
                  max_multiboot_size
                          DCD      0x00000000

                          END
